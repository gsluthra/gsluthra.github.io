<!DOCTYPE html>
<html>
<head>
  <meta http-equiv="content-type" content="text/html; charset=utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Difference between sorted, sortWith and sortBy in Scala &mdash; life-lessons.in</title>
  <!--[if lt IE 9]><script src='https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.2/html5shiv.min.js'></script><![endif]-->
  
  <link rel="stylesheet" href="/assets/app.css">
  <script type="text/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

<script src="/assets/app.js"></script>

<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');</script>


<script>(function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.0";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));</script>






<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-69555622-1', 'auto');
  ga('send', 'pageview');
</script>


  <link rel="shortcut icon" href="/favicon.ico?v2" type="image/x-icon" />
  <link rel="alternate" type="application/atom+xml" title="life-lessons.in" href="/atom.xml" />
  <meta name="title" content="Difference between sorted, sortWith and sortBy in Scala ">
  <link rel="canonical" href="http://life-lessons.in/2014/07/26/scala-diff-between-sort-methods.html">
  
  
  <meta property="og:title" content="Difference between sorted, sortWith and sortBy in Scala"/>
  <meta property="og:url" content="http://life-lessons.in/2014/07/26/scala-diff-between-sort-methods.html"/>
  
      <meta property="og:image" content="http://life-lessons.in/images/general/ayemin-unsplash-small.jpg"/>
  


  
  <meta property="og:description" content="Scala collections provide you three options for sorting: `sorted()`, `sortWith()` and `sortBy()`. This blog explains the differences."/>
  <meta name="description" content="Scala collections provide you three options for sorting: `sorted()`, `sortWith()` and `sortBy()`. This blog explains the differences."/>
  
  <meta property="og:site_name" content="life-lessons.in">
</head>
<body>
    
  <header class="site-header">
    <nav>
      <a class="brand" href="/">
        <img src="/images/LL-logo.png" alt="Inc">
      </a>
      <a href="/">Blog</a>
      <a href="/presentations.html">Presentations</a>
      <a href="/books.html">Books</a>
      <a href="/about.html">About Me</a>
    </nav>
  </header>

  
<div class="article-cover" style="background-image:url(/images/general/orange-evening.jpg)"></div>


<div class='cover-caption'><a href='/about.html#pictures'>Near the Norbulingka Institute, Dharamshala, India</a></div>


<article >

  <div class="container">
    <header>
      <div class="meta">
        By <address><a rel="author" href="" title="Gurpreet Luthra" target="_blank">Gurpreet Luthra</a></address> &mdash;
        <time pubdate datetime="2014-26-July" title="Jul 26, 2014">Jul 26, 2014</time> &mdash;
        
3 min read
      </div>
      <h1 class="title">Difference between sorted, sortWith and sortBy in Scala</h1>
      <h2 class="subtitle">Understand which sort method to use in what situation.</h2>
    </header>

    <section>
      <p>Scala collections provide you three options for sorting: <code>sorted()</code>, <code>sortWith()</code> and <code>sortBy()</code>. Here is a simplified explanation:</p>

<h3 id="sorted">sorted</h3>
<p>Will sort the list using the natural ordering (based on the implicit Ordering passed)</p>

<h3 id="sortby-an-attribute">sortBy (an attribute)</h3>
<p>Sort by a given attribute using the attributeâ€™s type.
e.g. given a list of <code>Person</code> objects, if you want to sort them in ascending order of their age
(which is an <code>Int</code>), you could simply say:</p>

<div class="highlight"><pre><code class="language-scala" data-lang="scala"><span class="lineno">1</span> <span class="n">personList</span><span class="o">.</span><span class="n">sortBy</span><span class="o">(</span><span class="k">_</span><span class="o">.</span><span class="n">age</span><span class="o">)</span></code></pre></div>

<h3 id="sortwith-a-function">sortWith (a function)</h3>
<p>Takes a comparator function. Useful when you want to specify a custom sorting logic.
e.g. if you want to sort by age descending, you could write this as:</p>

<div class="highlight"><pre><code class="language-scala" data-lang="scala"><span class="lineno">1</span> <span class="n">personList</span><span class="o">.</span><span class="n">sortWith</span><span class="o">{(</span><span class="n">leftE</span><span class="o">,</span><span class="n">rightE</span><span class="o">)</span> <span class="k">=&gt;</span>
<span class="lineno">2</span>      <span class="n">leftE</span><span class="o">.</span><span class="n">age</span> <span class="o">&gt;</span> <span class="n">rightE</span><span class="o">.</span><span class="n">age</span>
<span class="lineno">3</span> <span class="o">}</span></code></pre></div>

<p>Or, more simply:</p>

<div class="highlight"><pre><code class="language-scala" data-lang="scala"><span class="lineno">1</span> <span class="n">personList</span><span class="o">.</span><span class="n">sortWith</span><span class="o">(</span><span class="k">_</span><span class="o">.</span><span class="n">age</span> <span class="o">&gt;</span> <span class="k">_</span><span class="o">.</span><span class="n">age</span><span class="o">)</span></code></pre></div>

<h3 id="a-full-example">A full example</h3>

<div class="highlight"><pre><code class="language-scala" data-lang="scala"><span class="lineno"> 1</span> <span class="c1">// Sequence of numbers</span>
<span class="lineno"> 2</span> <span class="k">val</span> <span class="n">xs</span> <span class="k">=</span> <span class="nc">Seq</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">2</span><span class="o">)</span>
<span class="lineno"> 3</span> 
<span class="lineno"> 4</span> <span class="c1">// Sort using Natural ordering as defined for Integers in Scala Library</span>
<span class="lineno"> 5</span> <span class="n">xs</span><span class="o">.</span><span class="n">sorted</span> <span class="c1">//1,2,3,4,5,6</span>
<span class="lineno"> 6</span> 
<span class="lineno"> 7</span> <span class="c1">// Sort &#39;with&#39; a comparator function</span>
<span class="lineno"> 8</span> <span class="n">xs</span><span class="o">.</span><span class="n">sortWith</span><span class="o">(</span><span class="k">_</span><span class="o">&lt;</span><span class="k">_</span><span class="o">)</span> <span class="c1">//1,2,3,4,5,6</span>
<span class="lineno"> 9</span> <span class="n">xs</span><span class="o">.</span><span class="n">sortWith</span><span class="o">(</span><span class="k">_</span><span class="o">&gt;</span><span class="k">_</span><span class="o">)</span> <span class="c1">//6,5,4,3,2,1</span>
<span class="lineno">10</span> <span class="n">xs</span><span class="o">.</span><span class="n">sortWith</span><span class="o">((</span><span class="n">left</span><span class="o">,</span><span class="n">right</span><span class="o">)</span> <span class="k">=&gt;</span> <span class="n">left</span> <span class="o">&gt;</span> <span class="n">right</span><span class="o">)</span> <span class="c1">//6,5,4,3,2,1</span>
<span class="lineno">11</span> 
<span class="lineno">12</span> <span class="c1">// Create a Person class</span>
<span class="lineno">13</span> <span class="k">case</span> <span class="k">class</span> <span class="nc">Person</span><span class="o">(</span><span class="k">val</span> <span class="n">name</span><span class="k">:</span><span class="kt">String</span><span class="o">,</span> <span class="k">val</span> <span class="n">age</span><span class="k">:</span><span class="kt">Int</span><span class="o">)</span>
<span class="lineno">14</span> 
<span class="lineno">15</span> <span class="c1">// Define a list of Persons</span>
<span class="lineno">16</span> <span class="k">val</span> <span class="n">ps</span> <span class="k">=</span> <span class="nc">Seq</span><span class="o">(</span><span class="nc">Person</span><span class="o">(</span><span class="s">&quot;John&quot;</span><span class="o">,</span> <span class="mi">32</span><span class="o">),</span> <span class="nc">Person</span><span class="o">(</span><span class="s">&quot;Bruce&quot;</span><span class="o">,</span> <span class="mi">24</span><span class="o">),</span> <span class="nc">Person</span><span class="o">(</span><span class="s">&quot;Cindy&quot;</span><span class="o">,</span> <span class="mi">33</span><span class="o">),</span> <span class="nc">Person</span><span class="o">(</span><span class="s">&quot;Sandra&quot;</span><span class="o">,</span> <span class="mi">18</span><span class="o">))</span>
<span class="lineno">17</span> 
<span class="lineno">18</span> <span class="c1">// Sort People by increasing Age (natural ordering of Int will kick in)</span>
<span class="lineno">19</span> <span class="n">ps</span><span class="o">.</span><span class="n">sortBy</span><span class="o">(</span><span class="k">_</span><span class="o">.</span><span class="n">age</span><span class="o">)</span> <span class="c1">//List(Person(Sandra,18), Person(Bruce,24), Person(John,32), Person(Cindy,33))</span>
<span class="lineno">20</span> 
<span class="lineno">21</span> <span class="c1">// Sort People by decreasing Age, using a comparator function</span>
<span class="lineno">22</span> <span class="n">ps</span><span class="o">.</span><span class="n">sortWith</span><span class="o">(</span><span class="k">_</span><span class="o">.</span><span class="n">age</span> <span class="o">&gt;</span> <span class="k">_</span><span class="o">.</span><span class="n">age</span><span class="o">)</span> <span class="c1">//List(Person(Cindy,33), Person(John,32), Person(Bruce,24), Person(Sandra,18))</span></code></pre></div>

      
<div class="social">
  
  <div class='twitter'>
    <a href="https://twitter.com/share" class="twitter-share-button"  data-text="Difference between sorted, sortWith and sortBy in Scala" data-related="_zenx_">Tweet</a>
  </div>
  

  
  <div class='facebook'>
    <div class="fb-share-button" data-layout="button_count"></div>
  </div>
  

  
    
  

  
  <div class='reddit'>
    <a href="//www.reddit.com/submit" onclick="window.open('//www.reddit.com/submit?url=http://life-lessons.in/2014/07/26/scala-diff-between-sort-methods.html&title=Difference+between+sorted%2C+sortWith+and+sortBy+in+Scala'); return false"> <img src="//www.redditstatic.com/spreddit7.gif" alt="submit to reddit" border="0" /> </a>
  </div>
  
</div>

    </section>

    <footer>
      <address>
        <img src="/images/general/gp-square-v.jpg">
        <p>Written by <strong><a rel="author" href="https://twitter.com/_zenx_" title="" target="_blank">Gurpreet Luthra</a></strong><br>
          <span class="muted">Software Craftsman and Lead Consultant Developer at ThoughtWorks</span>
        </p>
      </address>
      
      
      <section class="post_summary">
        <h5 class="title">Next up: <a href="/2014/11/28/Way-to-a-new-project.html" rel="prefetch">Way To A New Project</a></h5>
        <p>You move to a new project. Its exciting. It holds promise of something awesome (usually). You are ready to dive. You want to learn things fast. You want to contribute. You want to become effective. You want to be welcomed. And then maybe, become invaluable.</p>
        <hr>
      </section>
       
      
      
      <section class="post_summary">
        <h5 class="title">Previous story: <a href="/2014/01/10/using-capybara-and-rspec.html" rel="prefetch">Using Capybara and Rspec assertions in Page Objects</a></h5>
        <p>In this blog I explain how using Capybara and Rspec, one can implement the page object pattern in Rails.</p>
        <hr>
      </section>
       
      
      <section>
        <div id="disqus_thread"></div>
<script type="text/javascript">
  var disqus_shortname = 'life-lessons-in';

  (function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
  })();
</script>
      </section>
      
    </footer>
  </div>
</article>


  <footer class="site-footer">
    <div class="container">
      &copy; 2020 Gurpreet Luthra
        
      <nav>
        <a href="/">Blog</a> &middot;
        <a href="/about.html">About Me</a>
        <a href="/books.html">Books I Love</a>
        <a href="/terms.html">Terms and Conditions</a>
      </nav>
        
      <nav class="social">
        
<a href="https://twitter.com/_zenx_" title="Follow on Twitter" target="_blank"><i class="icon icon-twitter"></i></a>


<a href="https://github.com/gsluthra" title="Watch on Github" target="_blank"><i class="icon icon-github"></i></a>


<a href="/atom.xml" title="RSS Feed">
  <i class="icon icon-rss"></i>
</a>

      </nav>
      <div>Based on Incorporated theme by <a href="https://sendtoinc.com">Inc</a>. Powered by Jekyll.</div>
    </div>
  </footer>

</body>
</html>
